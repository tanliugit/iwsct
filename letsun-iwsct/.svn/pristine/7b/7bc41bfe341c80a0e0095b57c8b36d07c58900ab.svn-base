<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.letsun.iwsct.base.mapper.TpositionMapper" >
    <resultMap id="ResultMapBase" type="com.letsun.iwsct.base.domain.Tposition" >
	  	<id property="id" column="id" jdbcType="BIGINT" />
	  	<result property="positionid" column="POSITIONID" jdbcType="BIGINT"/>
	  	<result property="corpid" column="CORPID" jdbcType="BIGINT"/>
	  	<result property="orgid" column="ORGID" jdbcType="BIGINT"/>
	  	<result property="positionname" column="POSITIONNAME" jdbcType="VARCHAR"/>
	  	<result property="content" column="CONTENT" jdbcType="LONGVARCHAR"/>
	  	<result property="remarks" column="REMARKS" jdbcType="VARCHAR"/>
	  	<result property="status" column="STATUS" jdbcType="INTEGER"/>
	  	<result property="creator" column="CREATOR" jdbcType="VARCHAR"/>
	  	<result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
	  	<result property="modifier" column="modifier" jdbcType="VARCHAR"/>
	  	<result property="modifyDate" column="modify_date" jdbcType="TIMESTAMP"/>
	  	<result property="createcorp" column="CREATECORP" jdbcType="BIGINT"/>
	  	<result property="areaid" column="AREAID" jdbcType="BIGINT"/>
	  	<result property="logourl" column="LOGOURL" jdbcType="VARCHAR"/>
	  	<result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>
	
	<sql id="BaseColumn">
		id,positionid,corpid,orgid,positionname,content,remarks,status,creator,create_date,modifier,modify_date,createcorp,areaid,logourl,deleted
	</sql>
	
	<sql id="BaseColumnComplex">
		A.id,A.positionid,A.corpid,A.orgid,A.positionname,A.content,A.remarks,A.status,A.creator,A.create_date,A.modifier,A.modify_date,A.createcorp,A.areaid,A.logourl,A.deleted
	</sql>
	
    <!-- 多表关联查询 -->  
    <select id="selectComplex" resultMap="ResultMapBase">
		select <include refid="BaseColumnComplex"/>
	 	from t_position A
	 	<include refid="sqlwhereSearch"/>
    </select>

	<!-- 查询条件 -->
	<sql id="sqlwhereSearch">
		<where>
			<if test="name !=null and name != ''">
				<!--AND A.name like CONCAT('%',#{name},'%')  -->
			</if>
		</where>
	</sql>
</mapper>